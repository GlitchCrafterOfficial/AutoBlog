---
import Logo from './vectors/main/Logo.astro'
---

<aside id="sidebar">
    <span class="toggle">[ X ]</span>
    <div id='logoCont' class="logo-container">
        <Logo />
    </div>
<br/>
    <ul id='linkList' class="links">
        <li id="singleLink" class="link">🏠 <label id='linkDesc'>Inicio</label></li>
        <li id="singleLink" class="link">📃 <label id='linkDesc'>Posts</label></li>
        <li id="singleLink" class="link">⛓️ <label id='linkDesc'>Conexiones</label></li>
        <li id="singleLink" class="link">🔎 <label id='linkDesc'>Acerca de</label></li>
    </ul>
</aside>

<script>


    function bidirectionalRelplace(replaceClass: string, newToken: string, querySelector: string) {
        const element = document.querySelector(querySelector);
        return function () {
            if (element?.classList.contains(replaceClass)) {
                element?.classList.replace(replaceClass, newToken);
            } else {
                element?.classList.replace(newToken, replaceClass);
            }
        }
    }

    function imageScaler(querySelector: string) {
        let element = document.querySelector(querySelector);
        const originalWidth = element?.getAttribute('width');
        const originalHeight = element?.getAttribute('height');
        

        return function (width: string = '40px', height: string = '40px') {

            if (element?.getAttribute('width') !== originalWidth) {
                element?.setAttribute('width', originalWidth);
                element?.setAttribute('height', originalHeight);
            } else {
                element?.setAttribute('width', width);
                element?.setAttribute('height', height);
            }

        }
    }

    function applyList(querySelector: string, class_: string) {
        const list = document.querySelectorAll(querySelector);
        list.forEach((element) => {
            element.classList.toggle(class_);
        });
    }

    const toggle = document.querySelector('.toggle');
    const aside = document.querySelector('aside');
    const containerReplacer = bidirectionalRelplace('logo-container', 'push-right', '#logoCont');
    const logoScaler = imageScaler('.logo');

    toggle?.addEventListener('click', () => {
        const singleLinks = document.querySelectorAll('#singleLink');

        

        singleLinks.forEach((element) => {
            console.log("Adding event listeners");
            if (element.classList.contains('listened')) {
                element.removeEventListener('mouseover', () => {});
            }

            element.classList.toggle('listened')
            element.addEventListener('mouseover', () => {
                element.querySelector('label')?.classList.toggle('hide-text');
                element.querySelector('label')?.classList.toggle('label-collapsed');
            });

            element.addEventListener('mouseout', () => {
                element.querySelector('label')?.classList.toggle('hide-text');
                element.querySelector('label')?.classList.toggle('label-collapsed');

            });
            element.removeEventListener('mouseover', () => {});
            element.removeEventListener('mouseout', () => {});
           
        })

        aside?.classList.toggle('hidden');
        if (toggle) {
            toggle.textContent = toggle.textContent === '[ X ]' ? '[ -> ]' : '[ X ]';
        }


        containerReplacer();
        logoScaler('40px', '40px');

        let mutations: {[id: string]: Array<string>} = {
            "#linkDesc": ["hide-text"],
            "#singleLink": ["push-right", "push-left", "link", "link-collapsed"]
        }

        for (let key in mutations) {
            mutations[key].forEach((mutation) => {
                applyList(key, mutation);
            });
        }


    });
</script>

<style>
    .label-collapsed {
        position: absolute;
        padding-left: 1rem;
        padding-right: 1rem;
        width: 6rem;
        background-color: #001326;

    }
    .link-collapsed {
        cursor: pointer;
        
    }

    .hide-text {
        display: none;
    }
    .push-left {
        margin-right: 7%;
    }
    .push-right {
        margin-left: 85%;
        margin-top: 2rem;
    }
    
    .mini {
        width: 20% ;
        height: 20%;
    }
    .hidden {
        margin-left: -16%;
    }
    .toggle {
        position: relative;
        top: 1rem;
        left: 1rem;
        /* Push to the right */
        margin-left: 80%;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .toggle:hover {
        color: #FFD700;
    }


  
    .link {
        margin-top: 1.5rem;
        text-shadow: 1px 1px 0px gray;
        
    }

    .link:hover {
        cursor: pointer;
        color: #FFD700;
        text-shadow: 1px 1px 0px #FFD700;
        
    }

    .link:hover::before {
        content: ">";
        color: #FFD700;
        margin-right: 1rem;
    }

    .link:hover::after {
        content: "<";
        color: #FFD700;
        margin-left: 1rem;
    }



    .links {
        margin-top: 5rem;
        font-family: "Jersey 25", serif;
        font-weight: 400;
        font-style: normal;
        font-size: 1.5rem;
        color: white;
        list-style: none;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .logo-container {
        margin-top: 5rem;
        margin-left: 1rem;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100px;
    }

    aside {
        z-index: 10;
        /* Comic style */
        display: block;
        position: absolute;
        width: 20%;
        height: 100vh;
        background-color: #001326;
        /* Black comic shadow */
        box-shadow: 2px 0 2px 1px rgb(0, 0, 0);
        
    }

    


</style>